name: CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install npm dependencies
      - name: Install dependencies
        run: |
          cd client && npm ci

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('docker-compose.prod.yml') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Build and run the Docker containers
      - name: Build client app
        run: |
          docker-compose -f docker-compose.prod.yml up --build -d --no-cache

      # Run client tests (если они есть)
      # - name: Run client tests
      #   run: |
      #     docker exec -w /app ==client-container== npm run test

      # Stop and remove Docker containers after tests
      - name: Stop and remove containers
        run: docker-compose -f docker-compose.prod.yml down

      # Deploy to Server
      # - name: Deploy to Server
      #   if: github.ref == 'refs/heads/main' && success()
      #   run: |
      #     ssh user@server.com 'cd /path/to/app && docker-compose pull && docker-compose up -d'
